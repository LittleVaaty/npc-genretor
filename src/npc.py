import randomfrom src.data_loader import DataLoaderclass Npc:    def __init__(self):        self.plot_hook = None        self.character = None        self.mouth = None        self.lips = None        self.teeth = None        self.head = None        self.nose = None        self.front = None        self.haircut = None        self.sex = None        self.skin_tone = None        self.weight = None        self.height = None    def _get_random_data(self, data):        weighs = []        data_value = []        for d in data:            weighs.append(d['weight'])            data_value.append(d['value'])        return random.choices(data_value, weighs, k=1)[0]    @staticmethod    def create_random(data_loader: DataLoader):        npc = Npc()        sex_data = data_loader.load('sex')        npc.sex = npc._get_random_data(sex_data)        for s in ["weight", "height", "skin_tone", "head", "front",                  "nose", "mouth", "teeth", "lips", "haircut", "character", "plot_hook"]:            data = data_loader.load(s)            value = npc._get_random_data(data)            setattr(npc, s, value)        npc._set_sentence(data_loader.load("sentence"))        return npc    def _set_sentence(self, sentence):        self.general_sentence = sentence['description'][self.sex]\            .format(self.height, self.weight, self.skin_tone)        self.hair_sentence = sentence['hair'][self.sex].format(self.haircut)        self.head_sentence = sentence['head'][self.sex]\            .format(self.head, self.front, self.nose)        self.eyes_sentence = "Elle a les yeux r√©volvers"        self.mouth_sentence = sentence['mouth'][self.sex]\            .format(self.mouth, self.lips, self.teeth)    def get_physical_description(self):        return f"{self.general_sentence}\n{self.hair_sentence}\n" \               f"{self.head_sentence}\n{self.eyes_sentence}\n{self.mouth_sentence}"    def get_character_description(self):        return self.character    def get_plot_hook(self):        return self.plot_hook